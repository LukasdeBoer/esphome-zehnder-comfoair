esphome:
  name: comfoair
  friendly_name: Zehnder ComfoAir Q350

esp32:
  board: esp32-evb
  framework:
    type: arduino

logger:
  level: INFO
  logs:
    canbus: INFO


# Enable Home Assistant MQTT discovery
mqtt:
  broker: 192.168.188.10
  port: 1883
  on_message:
    - topic: comfoair/sensor/comfoair_fan_level/command
      qos: 0
      then:
        - lambda: |
            id(comfoair)->set_level(atoi(x.c_str()));

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  # manual_ip:
  #   # Set this to the IP of the ESP
  #   static_ip: 192.168.188.19
  #   # Set this to the IP address of the router. Often ends with .1
  #   gateway: 192.168.188.1
  #   # The subnet of the network. 255.255.255.0 works for most home networks.
  #   subnet: 255.255.255.0
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Comfoair Fallback Hotspot"
    password: !secret wifi_hotspot_password

captive_portal:

web_server:
  port: 80

substitutions:
  device_name: comfoair
  filter_time: 5s
  filter_send_every: '1'
  filter_window_size: '3'

.throttle-filter: &throttle-filter
  - throttle_average: '${filter_time}'
  - filter_out: nan
  - sliding_window_moving_average: {send_every: '${filter_send_every}', window_size: '${filter_window_size}'}

.throttle-filter-round-tens: &throttle-filter-round-tens
  - throttle_average: '${filter_time}'
  - filter_out: nan
  - sliding_window_moving_average: {send_every: '${filter_send_every}', window_size: '${filter_window_size}'}
  - lambda: return round(x/10)*10;

.throttle-filter-e-3: &throttle-filter-e-3
  - throttle_average: '${filter_time}'
  - filter_out: nan
  - sliding_window_moving_average: {send_every: '${filter_send_every}', window_size: '${filter_window_size}'}
  - multiply: 0.001


external_components:
  - source: components
    components: [ zehnder_comfoair_q ]


zehnder_comfoair_q:
  id: comfoair
  request_ids: [16, 49, 65, 66, 67, 81, 82, 117, 118, 119, 120, 121, 122, 128, 129, 130, 144, 145, 146, 192, 209, 212, 213, 214, 215, 216, 217, 218, 220, 221, 227, 274, 275, 276, 277, 278, 290, 291, 292, 293, 294, 416, 417, 418]

canbus:
  - platform: esp32_can
    tx_pin: GPIO5
    rx_pin: GPIO35
    bit_rate: 50kbps
    can_id: 0 # mandatory but we do not use it
    on_frame:
    - can_id: 0
      can_id_mask: 0
      use_extended_id: true
      then:
      - lambda: |-
          auto data_pretty = remote_transmission_request ? "n/a" : format_hex_pretty(x).c_str();
          if ((can_id & 0b11111000000000011111111000000) == 0b00000000000000000000001000000)
            ESP_LOGD("comfoair_dump", "Node: %d, PDO: %d, rtr: %d, length: %d, content: %s (can_id: 0x%08x)", can_id & 0x3f, can_id >> 14, remote_transmission_request, x.size(), data_pretty, can_id);
          else
            ESP_LOGV("comfoair_dump", "can_id: 0x%08x, rtr: %d, length: %d, content: %s", can_id, remote_transmission_request, x.size(), data_pretty);
    - can_id:      0b00000000000000000000001000000
      can_id_mask: 0b11111000000000011111111000000
      use_extended_id: true
      remote_transmission_request: false
      then:
        - lambda: |-
            auto pdo_id = id(comfoair)->get_pdo_id_from_can_id (can_id); // need space for ESPHome not to try to interpret it as id(...)
            switch (pdo_id)
            {
                comfoair_on_frame_case( 16, id(comfoair), away_indicator_raw,                true);
                comfoair_on_frame_case( 49, id(comfoair), operating_mode,                    true);
                comfoair_on_frame_case( 65, id(comfoair), fan_level,                         true);
                comfoair_on_frame_case( 66, id(comfoair), bypass_activation_mode,            true);
                comfoair_on_frame_case( 67, id(comfoair), temperature_profile,               true);
                comfoair_on_frame_case( 81, id(comfoair), next_fan_change_in_raw,            false);
                comfoair_on_frame_case( 82, id(comfoair), next_bypass_change_in_raw,         false);
                comfoair_on_frame_case(117, id(comfoair), exhaust_fan_duty,                  false);
                comfoair_on_frame_case(118, id(comfoair), supply_fan_duty,                   false);
                comfoair_on_frame_case(119, id(comfoair), exhaust_fan_flow,                  false);
                comfoair_on_frame_case(120, id(comfoair), supply_fan_flow,                   false);
                comfoair_on_frame_case(121, id(comfoair), exhaust_fan_speed,                 true);
                comfoair_on_frame_case(122, id(comfoair), supply_fan_speed,                  true);
                comfoair_on_frame_case(128, id(comfoair), power,                             true);
                comfoair_on_frame_case(129, id(comfoair), energy_ytd,                        true);
                comfoair_on_frame_case(130, id(comfoair), energy_since_start,                true);
                comfoair_on_frame_case(192, id(comfoair), filter_replacement_remaining_days, false);
                comfoair_on_frame_case(209, id(comfoair), running_mean_outdoor_temp,         false);
                comfoair_on_frame_case(212, id(comfoair), profile_target_temp,               false);
                comfoair_on_frame_case(213, id(comfoair), avoided_heating_actual,            true);
                comfoair_on_frame_case(214, id(comfoair), avoided_heating_ytd,               true);
                comfoair_on_frame_case(215, id(comfoair), avoided_heating_total,             true);
                comfoair_on_frame_case(216, id(comfoair), avoided_cooling_actual,            true);
                comfoair_on_frame_case(217, id(comfoair), avoided_cooling_ytd,               true);
                comfoair_on_frame_case(218, id(comfoair), avoided_cooling_total,             true);
                comfoair_on_frame_case(220, id(comfoair), pre_heater_temp_before,            false);
                comfoair_on_frame_case(221, id(comfoair), post_heater_temp_after,            false);
                comfoair_on_frame_case(227, id(comfoair), bypass_state,                      true);
                comfoair_on_frame_case(274, id(comfoair), extract_air_temp,                  false);
                comfoair_on_frame_case(275, id(comfoair), exhaust_air_temp,                  false);
                comfoair_on_frame_case(276, id(comfoair), outdoor_air_temp,                  false);
                comfoair_on_frame_case(277, id(comfoair), pre_heater_temp_after,             false);
                comfoair_on_frame_case(278, id(comfoair), supply_air_temp,                   false);
                comfoair_on_frame_case(290, id(comfoair), extract_air_humidity,              true);
                comfoair_on_frame_case(291, id(comfoair), exhaust_air_humidity,              true);
                comfoair_on_frame_case(292, id(comfoair), outdoor_air_humidity,              true);
                comfoair_on_frame_case(293, id(comfoair), pre_heater_humidity_after,         true);
                comfoair_on_frame_case(294, id(comfoair), supply_air_humidity,               true);
            }


sensor:

  - platform: template
    id: away_indicator_raw # PDO 16
    accuracy_decimals: 0
    on_value:
      then:
        - lambda: id(away_indicator).publish_state(x == 7);

  - platform: template
    id: next_fan_change_in_raw # PDO 81
    name: '${device_name} next_fan_change_in_raw'
    accuracy_decimals: 0
    device_class: duration
    unit_of_measurement: 's'
    internal: true
    on_value:
      then:
        - lambda: id(next_fan_change_in).publish_state(id(comfoair)->seconds_to_human_readable(x));

  - platform: template
    id: next_bypass_change_in_raw # PDO 82
    name: '${device_name} next_bypass_change_in_raw'
    accuracy_decimals: 0
    device_class: duration
    unit_of_measurement: 's'
    internal: true
    on_value:
      then:
        - lambda: id(next_bypass_change_in).publish_state(id(comfoair)->seconds_to_human_readable(x));

  - platform: template
    id: exhaust_fan_duty # PDO 117
    name: '${device_name} exhaust_fan_duty'
    accuracy_decimals: 0
    unit_of_measurement: '%'
    state_class: measurement
    filters: *throttle-filter

  - platform: template
    id: supply_fan_duty # PDO 118
    name: '${device_name} supply_fan_duty'
    accuracy_decimals: 0
    unit_of_measurement: '%'
    state_class: measurement
    filters: *throttle-filter

  - platform: template
    id: supply_fan_flow # PDO 119
    name: '${device_name} supply_fan_flow'
    accuracy_decimals: 0
    unit_of_measurement: 'm³/h'
    state_class: measurement
    filters: *throttle-filter

  - platform: template
    id: exhaust_fan_flow # PDO 120
    name: '${device_name} exhaust_fan_flow'
    accuracy_decimals: 0
    unit_of_measurement: 'm³/h'
    state_class: measurement
    filters: *throttle-filter

  - platform: template
    id: exhaust_fan_speed # PDO 121
    name: '${device_name} exhaust_fan_speed'
    accuracy_decimals: 0
    unit_of_measurement: 'rpm'
    state_class: measurement
    filters: *throttle-filter-round-tens

  - platform: template
    id: supply_fan_speed # PDO 122
    name: '${device_name} supply_fan_speed'
    accuracy_decimals: 0
    unit_of_measurement: 'rpm'
    state_class: measurement
    filters: *throttle-filter-round-tens

  - platform: template
    id: power # PDO 128
    name: '${device_name} power'
    accuracy_decimals: 0
    unit_of_measurement: 'W'
    device_class: power
    state_class: measurement
    filters: *throttle-filter

  - platform: template
    id: energy_ytd # PDO 129
    name: '${device_name} energy_ytd'
    accuracy_decimals: 0
    unit_of_measurement: 'kWh'
    device_class: energy
    state_class: total_increasing

  - platform: template
    id: energy_since_start # PDO 130
    name: '${device_name} energy_since_start'
    accuracy_decimals: 0
    unit_of_measurement: 'kWh'
    device_class: energy
    state_class: total_increasing

  - platform: template
    id: pre_heater_power_cons_current # PDO 144
    name: '${device_name} pre_heater_power_cons_current'
    accuracy_decimals: 0
    unit_of_measurement: 'W'
    device_class: power
    state_class: measurement
    filters: *throttle-filter

  - platform: template
    id: pre_heater_power_cons_ytd # PDO 145
    name: '${device_name} pre_heater_power_cons_ytd'
    accuracy_decimals: 0
    unit_of_measurement: 'kWh'
    device_class: energy
    state_class: total_increasing

  - platform: template
    id: pre_heater_power_cons_since_start # PDO 146
    name: '${device_name} pre_heater_power_cons_since_start'
    accuracy_decimals: 0
    unit_of_measurement: 'kWh'
    device_class: energy
    state_class: total_increasing

  - platform: template
    id: filter_replacement_remaining_days # PDO 192
    name: '${device_name} filter_replacement_remaining_days'
    accuracy_decimals: 0
    unit_of_measurement: 'days'

  - platform: template
    id: running_mean_outdoor_temp # PDO 209
    name: '${device_name} running_mean_outdoor_temp'
    filters: [multiply: 0.1]
    accuracy_decimals: 1
    unit_of_measurement: '°C'
    device_class: temperature
    state_class: measurement

  - platform: template
    id: profile_target_temp # PDO 212
    name: '${device_name} profile_target_temp'
    filters: [multiply: 0.1]
    accuracy_decimals: 1
    unit_of_measurement: '°C'
    device_class: temperature
    state_class: measurement

  - platform: template
    id: avoided_heating_actual # PDO 213
    name: '${device_name} avoided_heating_actual'
    filters: *throttle-filter-e-3
    accuracy_decimals: 3
    unit_of_measurement: 'kW'
    device_class: power
    state_class: measurement

  - platform: template
    id: avoided_heating_ytd # PDO 214
    name: '${device_name} avoided_heating_ytd'
    accuracy_decimals: 0
    unit_of_measurement: 'kWh'
    device_class: energy
    state_class: total_increasing

  - platform: template
    id: avoided_heating_total # PDO 215
    name: '${device_name} avoided_heating_total'
    accuracy_decimals: 0
    unit_of_measurement: 'kWh'
    device_class: energy
    state_class: total_increasing

  - platform: template
    id: avoided_cooling_actual # PDO 216
    name: '${device_name} avoided_cooling_actual'
    filters: *throttle-filter-e-3
    accuracy_decimals: 3
    unit_of_measurement: 'kW'
    device_class: power
    state_class: measurement

  - platform: template
    id: avoided_cooling_ytd # PDO 217
    name: '${device_name} avoided_cooling_ytd'
    accuracy_decimals: 0
    unit_of_measurement: 'kWh'
    device_class: energy
    state_class: total_increasing

  - platform: template
    id: avoided_cooling_total # PDO 218
    name: '${device_name} avoided_cooling_total'
    accuracy_decimals: 0
    unit_of_measurement: 'kWh'
    device_class: energy
    state_class: total_increasing

  - platform: template
    id: pre_heater_temp_before # PDO 220
    name: '${device_name} pre_heater_temp_before'
    filters: [multiply: 0.1]
    accuracy_decimals: 1
    unit_of_measurement: '°C'
    device_class: temperature
    state_class: measurement

  - platform: template
    id: post_heater_temp_after # PDO 221
    name: '${device_name} post_heater_temp_after'
    filters: [multiply: 0.1]
    accuracy_decimals: 1
    unit_of_measurement: '°C'
    device_class: temperature
    state_class: measurement

  - platform: template
    id: bypass_state # PDO 227
    name: '${device_name} bypass_state'
    accuracy_decimals: 0
    unit_of_measurement: '%'
    state_class: measurement

  - platform: template
    id: extract_air_temp # PDO 274
    name: '${device_name} extract_air_temp'
    filters: [multiply: 0.1]
    accuracy_decimals: 1
    unit_of_measurement: '°C'
    device_class: temperature
    state_class: measurement

  - platform: template
    id: exhaust_air_temp # PDO 275
    name: '${device_name} exhaust_air_temp'
    filters: [multiply: 0.1]
    accuracy_decimals: 1
    unit_of_measurement: '°C'
    device_class: temperature
    state_class: measurement

  - platform: template
    id: outdoor_air_temp # PDO 276
    name: '${device_name} outdoor_air_temp'
    filters: [multiply: 0.1]
    accuracy_decimals: 1
    unit_of_measurement: '°C'
    device_class: temperature
    state_class: measurement

  - platform: template
    id: pre_heater_temp_after # PDO 277, after ComfoFond/GHE
    name: '${device_name} pre_heater_temp_after'
    filters: [multiply: 0.1]
    accuracy_decimals: 1
    unit_of_measurement: '°C'
    device_class: temperature
    state_class: measurement

  - platform: template
    id: supply_air_temp # PDO 278
    name: '${device_name} supply_air_temp'
    filters: [multiply: 0.1]
    accuracy_decimals: 1
    unit_of_measurement: '°C'
    device_class: temperature
    state_class: measurement

  - platform: template
    id: extract_air_humidity # PDO 290
    name: '${device_name} extract_air_humidity'
    accuracy_decimals: 0
    unit_of_measurement: '%'
    device_class: humidity
    state_class: measurement

  - platform: template
    id: exhaust_air_humidity # PDO 291
    name: '${device_name} exhaust_air_humidity'
    accuracy_decimals: 0
    unit_of_measurement: '%'
    device_class: humidity
    state_class: measurement

  - platform: template
    id: outdoor_air_humidity # PDO 292, is this really still correct with ComfoFond/GHE installed?
    name: '${device_name} outdoor_air_humidity'
    accuracy_decimals: 0
    unit_of_measurement: '%'
    device_class: humidity
    state_class: measurement

  - platform: template
    id: pre_heater_humidity_after # PDO 293
    name: '${device_name} pre_heater_humidity_after'
    accuracy_decimals: 0
    unit_of_measurement: '%'
    device_class: humidity
    state_class: measurement

  - platform: template
    id: supply_air_humidity # PDO 294
    name: '${device_name} supply_air_humidity'
    accuracy_decimals: 0
    unit_of_measurement: '%'
    device_class: humidity
    state_class: measurement


binary_sensor:

  - platform: template
    id: away_indicator # PDO 16 (raw)
    name: '${device_name} away_indicator'


text_sensor:

  - platform: template
    id: fan_level # PDO 65
    name: '${device_name} fan_level'
    filters:
      - map:
        - 0 -> Away
        - 1 -> Low
        - 2 -> Medium
        - 3 -> High

  - platform: template
    id: operating_mode # PDO 49
    name: '${device_name} operating_mode'
    filters:
      - map:
        - 1 -> Manual (limited)
        - 2 -> PRESETRF
        - 3 -> PRESETANALOG
        - 4 -> PRESETRFANALOG
        - 5 -> Manual (permanent)
        - 6 -> Boost
        - 7 -> Boost (RF)
        - 8 -> Bathroom Switch
        - 11 -> Away
        - 255 -> Auto

  - platform: template
    id: bypass_activation_mode # PDO 66
    name: '${device_name} bypass_activation_mode'
    filters:
      - map:
        - 0 -> Auto
        - 1 -> Activated
        - 2 -> Deactivated

  - platform: template
    id: temperature_profile # PDO 67
    name: '${device_name} temperature_profile'
    filters:
      - map:
        - 0 -> Normal
        - 1 -> Cold
        - 2 -> Warm

  - platform: template
    id: next_fan_change_in # PDO 81 (raw)
    name: '${device_name} next_fan_change_in'

  - platform: template
    id: next_bypass_change_in # PDO 81 (raw)
    name: '${device_name} next_bypass_change_in'

switch:
  - platform: template
    name: '${device_name} Auto Ventilation'
    lambda: |-
      if (id(operating_mode).state == "Auto") {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      # if boost is on, turn it off first
      - if:
          condition:
            or:
              - text_sensor.state:
                  id: operating_mode
                  state: 'Boost'
              - text_sensor.state:  
                  id: operating_mode
                  state: 'Boost (RF)'
          then:
            - lambda: id(comfoair)->set_boost(0);
      - lambda: id(comfoair)->set_manual_mode(false);
    turn_off_action:
      - lambda: id(comfoair)->set_manual_mode(true);

button:
  - platform: template
    name: '${device_name} Boost 15min'
    icon: mdi:fast-forward-15
    on_press:
      - lambda: id(comfoair)->set_boost(15 * 60);
  - platform: template
    name: '${device_name} Boost 30min'
    icon: mdi:fast-forward-30
    on_press:
      - lambda: id(comfoair)->set_boost(30 * 60);
  - platform: template
    name: '${device_name} Boost 60min'
    icon: mdi:fast-forward-60
    on_press:
      - lambda: id(comfoair)->set_boost(60 * 60);
  - platform: template
    name: '${device_name} Boost off'
    icon: mdi:fan-minus
    on_press:
      - lambda: id(comfoair)->set_boost(0);
  - platform: template
    name: '${device_name} Bypass On (1h)'
    icon: mdi:fan-chevron-up
    on_press:
      - lambda: id(comfoair)->set_bypass_mode(zehnder_comfoair_q::BYPASS_ACTIVATE, 60 * 60);
  - platform: template
    name: '${device_name} Bypass Auto'
    icon: mdi:fan-auto
    on_press:
      - lambda: id(comfoair)->set_bypass_mode(zehnder_comfoair_q::BYPASS_AUTO, 0);
  - platform: template
    name: '${device_name} Bypass Off (1h)'
    icon: mdi:fan-chevron-down
    on_press:
      - lambda: id(comfoair)->set_bypass_mode(zehnder_comfoair_q::BYPASS_DEACTIVATE, 60 * 60);

select:
  - platform: template
    name: '${device_name} Temperature Profile'
    id: temperature_profile_select
    command_topic: "comfoair/sensor/comfoair_temperature_profile/command"
    state_topic: "comfoair/sensor/comfoair_temperature_profile/state"
    availability:
      topic: "comfoair/status"
    options:
     - "Normal"
     - "Cool"
     - "Warm"
    set_action: 
      - lambda: |
          if (x == "Normal") {
            id(comfoair)->set_temp_profile(zehnder_comfoair_q::TEMP_PROFIL_NORMAL);
          } else if (x == "Cool") {
            id(comfoair)->set_temp_profile(zehnder_comfoair_q::TEMP_PROFIL_COOL);
          } else if (x == "Warm") {
            id(comfoair)->set_temp_profile(zehnder_comfoair_q::TEMP_PROFIL_WARM);
          }

fan:
  - platform: speed
    name: '${device_name} Fan'
    id: "comfoair_fan"
    icon: mdi:air-filter
    output: comfoair_fan_output
    speed_count: 3
    # restore_mode: RESTORE_DEFAULT_ON
    on_turn_on:
      - lambda: id(comfoair)->set_level(1);
      - lambda: id(comfoair)->set_manual_mode(false);
    on_turn_off:
      - lambda: id(comfoair)->set_level(0);
    speed_level_state_topic: "comfoair/sensor/comfoair_fan_level/state"
    speed_level_command_topic: "comfoair/sensor/comfoair_fan_level/command"

    # - logger.log: "Fan Speed was changed!"
    # payload_off: "away"
    # payload_on: "medium"
    # command_topic: "comfoair/climate/fan/set"
    # state_value_template: "{{ iif(value == 'away', 'away', 'medium') }}"
    # availability_topic: "comfoair/status"
    # preset_mode_command_topic: "comfoair/climate/mode/set"
    # preset_mode_state_topic: "comfoair/climate/mode"
    # preset_mode_value_template: "{{ {'auto': 'auto', 'manual': 'manual', 'limited_manual': 'manual'}[value] | default('auto') }}"
    # preset_modes:
    #   - auto
    #   - manual
    # speed_range_min: 1
    # speed_range_max: 3
    # percentage_state_topic: "comfoair/climate/fan"
    # percentage_value_template: "{{ {'away': 0, 'low': 1, 'medium': 2, 'high': 3}[value] | default('medium') }}"
    # percentage_command_topic: "comfoair/climate/fan/set"
    # percentage_command_template: "{{ {0: 'away', 1: 'low', 2: 'medium', 3: 'high'}[value] | default('0') }}"

# Example configuration entry
output:
  - platform: template
    id: comfoair_fan_output
    type: float
    zero_means_zero: true
    write_action:
      - logger.log: "Fan Speed was changed!"
  